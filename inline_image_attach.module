<?php

/**
 * Implements hook_entity_presave().
 */
function inline_image_attach_entity_presave($entity) {
  // Get configuration settings.
  $settings = \Drupal::config('inline_image_attach.settings');
  $type_id = $entity->getEntityTypeId();
  if (isset($type_id)) {
    // If the entity we are saving is a node type.
    if ($entity instanceof \Drupal\Core\Entity\ContentEntityInterface && !empty($settings)) {
      // Convert type to machine name.
      $type = $entity->bundle();
      // Get the correct settings for this type.
      $iia_wysiwyg = $settings->get('iia_wysiwyg_' . $type);
      $iia_image = $settings->get('iia_image_' . $type);
      // get inline image upload directory
      $format = $entity->{$iia_wysiwyg}->format ?: 'full_html';
      $editor_config = \Drupal::config('editor.editor.' . $format);
      $upload_dir = $editor_config->get('image_upload');
      // Match any image URL's.
      preg_match_all('~<img.*?src=["\']+(.*?)["\']+~', $entity->{$iia_wysiwyg}->value, $urls);
      $result = array();
      foreach ($urls[1] as $path) {
        // Query the database for any inline images that match this URL.
        $filename = basename($path);
        $uri = 'public://' . $upload_dir['directory'] . '/' . urldecode($filename);
        $query = \Drupal::entityQuery('file');
        $query->condition('uri', $uri, '=');
        $result[] = $query->execute();
      }
      $files = array();
      // Load each file and place in the files array.
      foreach ($result as $f) {
        $files[] = entity_load('file', array_shift($f));
      }
      $existing_files = array();
      // Grab any existing files on the image field.
      if (!empty($entity->{$iia_image})) {
        foreach ($entity->{$iia_image}->getIterator() as $image) {
          array_push($existing_files, $image->target_id);
        }
      }
      // Only add the file if it does not already exist on the image field.
      foreach ($files as $file) {
        if (!in_array($file->fid->value, $existing_files)) {
          $entity->{$iia_image}[] = $file;
        }
      }
    }
  }
}
